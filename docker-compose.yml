version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: medusa-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: medusa
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: medusa-redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  medusa:
    build:
      context: .
      dockerfile: apps/server/Dockerfile
    container_name: medusa-server
    ports:
      - '9000:9000'
    environment:
      NODE_ENV: production
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/medusa
      POSTGRES_URL: postgres://postgres:postgres@postgres:5432/medusa
      REDIS_URL: redis://redis:6379
      MEDUSA_ADMIN_ONBOARDING_TYPE: default
      MEDUSA_ADMIN_ONBOARDING_NEXTJS: true
      STORE_CORS: http://localhost:3000,http://localhost:8000
      ADMIN_CORS: http://localhost:3000,http://localhost:7001
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
