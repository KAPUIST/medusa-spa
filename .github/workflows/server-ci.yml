name: Server CI
on:
  pull_request:
    branches:
      - 'master'
      - 'develop'
    paths:
      - 'apps/server/**'
      - 'packages/**'
      - 'package.json'
      - 'turbo.json'

jobs:
  test-server:
    name: "Test Server (Yarn)"
    env:
      NODE_ENV: CI
      REDIS_URL: redis://localhost:6379
      DATABASE_URL: "postgres://postgres:postgres@localhost/cli-test"
      POSTGRES_URL: "postgres://postgres:postgres@localhost/cli-test"
    services:
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: cli-test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'yarn'

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Check CLI tool is installed
        run: ./apps/server/node_modules/.bin/medusa -v || echo "CLI not found in apps/server"

      - name: Build server with Turbo
        run: yarn turbo run build --filter=server

      - name: Run migrations
        working-directory: apps/server
        run: npx medusa db:migrate

      - name: Run seed
        working-directory: apps/server
        run: yarn seed

      - name: Run development server
        working-directory: apps/server
        run: yarn dev &

      - name: Wait for live server response
        shell: "bash"
        run: ./.github/scripts/wait-for-server-live.sh

      - name: Kill server
        shell: "bash"
        run: kill -9 $(lsof -t -i :9000) || true
