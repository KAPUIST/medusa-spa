name: CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  lint-and-typecheck:
    name: Lint and Type Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run ESLint
        run: yarn lint

      - name: Run TypeScript type check
        run: yarn check-types

  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      NODE_ENV: CI
      REDIS_URL: redis://localhost:6379
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/medusa_test
      POSTGRES_URL: postgres://postgres:postgres@localhost:5432/medusa_test

    services:
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: medusa_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Check Medusa CLI
        run: ./apps/server/node_modules/.bin/medusa -v

      - name: Build server
        run: cd apps/server && yarn build

      - name: Run migrations
        run: cd apps/server && npx medusa db:migrate

      - name: Run seed
        run: cd apps/server && yarn seed

      - name: Run unit tests
        run: cd apps/server && yarn test:unit

      - name: Run integration tests (modules)
        run: cd apps/server && yarn test:integration:modules

      - name: Run integration tests (http)
        run: cd apps/server && yarn test:integration:http

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint-and-typecheck]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build all packages
        run: yarn build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            apps/*/dist
            apps/*/build
          retention-days: 7

  server-health-check:
    name: Server Health Check
    runs-on: ubuntu-latest
    needs: [test, build]
    env:
      NODE_ENV: CI
      REDIS_URL: redis://localhost:6379
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/medusa_test
      POSTGRES_URL: postgres://postgres:postgres@localhost:5432/medusa_test

    services:
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: medusa_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build server
        run: cd apps/server && yarn build

      - name: Run migrations
        run: cd apps/server && npx medusa db:migrate

      - name: Run seed
        run: cd apps/server && yarn seed

      - name: Start development server
        run: cd apps/server && yarn dev &

      - name: Wait for server to be ready
        run: ./.github/scripts/wait-for-server-live.sh

      - name: Kill server
        run: kill -9 $(lsof -t -i :9000) || true
