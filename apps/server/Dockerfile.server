FROM node:20-alpine AS base
RUN apk add --no-cache libc6-compat
RUN apk update

# Install turbo globally
RUN yarn global add turbo

FROM base AS pruner
WORKDIR /app
COPY . .
RUN turbo prune medusa-starter-default --docker

# Install dependencies
FROM base AS installer
WORKDIR /app

# Copy lockfile and package.json's of pruned subworkspace
COPY .gitignore .gitignore
COPY --from=pruner /app/out/json/ .
COPY --from=pruner /app/out/yarn.lock ./yarn.lock
RUN yarn install --frozen-lockfile

# Build the project
COPY --from=pruner /app/out/full/ .
RUN turbo run build --filter=medusa-starter-default

# Runner stage
FROM base AS runner
WORKDIR /app

# Don't run production as root
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 medusa
USER medusa

# Copy necessary files from installer
COPY --from=installer --chown=medusa:nodejs /app/apps/server/package.json ./package.json
COPY --from=installer --chown=medusa:nodejs /app/apps/server/.medusa ./.medusa
COPY --from=installer --chown=medusa:nodejs /app/apps/server/medusa-config.ts ./medusa-config.ts
COPY --from=installer --chown=medusa:nodejs /app/apps/server/tsconfig.json ./tsconfig.json
COPY --from=installer --chown=medusa:nodejs /app/node_modules ./node_modules
COPY --from=installer --chown=medusa:nodejs /app/apps/server/node_modules ./node_modules

EXPOSE 9000

ENV NODE_ENV=production
ENV PORT=9000

# Run migrations and start server
CMD ["sh", "-c", "npx medusa db:migrate && npx medusa start"]
